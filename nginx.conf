worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Gzip压缩配置
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_proxied any;

    # 定义变量
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        server_name localhost;

        # 错误日志配置
        error_log /var/log/nginx/error.log warn;
        access_log /var/log/nginx/access.log;

        # 安全headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # 前端静态文件
        root /usr/share/nginx/html;
        index index.html;

        # 上传文件访问
        location /uploads/ {
            proxy_pass http://backend:3000/uploads/;
            expires 7d;
            add_header Cache-Control "public, no-transform";
        }

        # 健康检查接口代理
        location /api/v1/health {
            proxy_pass http://backend:3000/api/v1/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API 反向代理
        location /api/ {
            proxy_pass         http://backend:3000/api/;
            proxy_http_version 1.1;
            proxy_set_header   Host                $host;
            proxy_set_header   X-Real-IP           $remote_addr;
            proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto   $scheme;
            proxy_set_header   Upgrade             $http_upgrade;
            proxy_set_header   Connection          $connection_upgrade;
            
            # 上传大文件超时设置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # 添加错误处理
            proxy_intercept_errors on;
            error_page 502 = @fallback;

            # 确保返回 JSON
            add_header Content-Type application/json;
        }

        # 后端服务不可用时的处理
        location @fallback {
            return 502 '{"success":false,"error":"后端服务暂时不可用，请稍后重试"}';
            add_header Content-Type application/json;
        }

        # 前端路由支持
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
} 