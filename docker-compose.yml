version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hazard-report-db
    environment:
      POSTGRES_USER: hazard_report
      POSTGRES_PASSWORD: hazard_report
      POSTGRES_DB: hazard_report
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hazard_report"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: hazard-report-backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    environment:
      DATABASE_URL: postgresql://hazard_report:hazard_report@postgres:5432/hazard_report
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      CORS_ORIGIN: http://localhost:8080
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: hazard-report-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/uploads:/usr/share/nginx/html/uploads:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 